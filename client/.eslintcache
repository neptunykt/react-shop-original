[{"/home/peter/online-store-full-course/client/src/index.js":"1","/home/peter/online-store-full-course/client/src/App.js":"2","/home/peter/online-store-full-course/client/src/store/DeviceStore.js":"3","/home/peter/online-store-full-course/client/src/store/UserStore.js":"4","/home/peter/online-store-full-course/client/src/components/AppRouter.js":"5","/home/peter/online-store-full-course/client/src/components/NavBar.js":"6","/home/peter/online-store-full-course/client/src/http/userAPI.js":"7","/home/peter/online-store-full-course/client/src/routes.js":"8","/home/peter/online-store-full-course/client/src/http/index.js":"9","/home/peter/online-store-full-course/client/src/utils/consts.js":"10","/home/peter/online-store-full-course/client/src/pages/DevicePage.js":"11","/home/peter/online-store-full-course/client/src/pages/Auth.js":"12","/home/peter/online-store-full-course/client/src/pages/Shop.js":"13","/home/peter/online-store-full-course/client/src/pages/Basket.js":"14","/home/peter/online-store-full-course/client/src/pages/Admin.js":"15","/home/peter/online-store-full-course/client/src/http/deviceAPI.js":"16","/home/peter/online-store-full-course/client/src/components/Pages.js":"17","/home/peter/online-store-full-course/client/src/components/DeviceList.js":"18","/home/peter/online-store-full-course/client/src/components/BrandBar.js":"19","/home/peter/online-store-full-course/client/src/components/TypeBar.js":"20","/home/peter/online-store-full-course/client/src/components/modals/CreateType.js":"21","/home/peter/online-store-full-course/client/src/components/modals/CreateDevice.js":"22","/home/peter/online-store-full-course/client/src/components/modals/CreateBrand.js":"23","/home/peter/online-store-full-course/client/src/components/DeviceItem.js":"24"},{"size":439,"mtime":1685657235375,"results":"25","hashOfConfig":"26"},{"size":966,"mtime":1685745603756,"results":"27","hashOfConfig":"26"},{"size":1298,"mtime":1685657235375,"results":"28","hashOfConfig":"26"},{"size":401,"mtime":1685743109059,"results":"29","hashOfConfig":"26"},{"size":772,"mtime":1685742276126,"results":"30","hashOfConfig":"26"},{"size":1889,"mtime":1685745416661,"results":"31","hashOfConfig":"26"},{"size":803,"mtime":1685745634012,"results":"32","hashOfConfig":"26"},{"size":774,"mtime":1685657235375,"results":"33","hashOfConfig":"26"},{"size":631,"mtime":1685745966376,"results":"34","hashOfConfig":"26"},{"size":228,"mtime":1685657235375,"results":"35","hashOfConfig":"26"},{"size":2425,"mtime":1685742150807,"results":"36","hashOfConfig":"26"},{"size":3142,"mtime":1685743984744,"results":"37","hashOfConfig":"26"},{"size":1538,"mtime":1685657235375,"results":"38","hashOfConfig":"26"},{"size":146,"mtime":1685657235375,"results":"39","hashOfConfig":"26"},{"size":1549,"mtime":1685657235375,"results":"40","hashOfConfig":"26"},{"size":995,"mtime":1685657235371,"results":"41","hashOfConfig":"26"},{"size":801,"mtime":1685657235371,"results":"42","hashOfConfig":"26"},{"size":491,"mtime":1685657235371,"results":"43","hashOfConfig":"26"},{"size":759,"mtime":1685657235371,"results":"44","hashOfConfig":"26"},{"size":752,"mtime":1685657235371,"results":"45","hashOfConfig":"26"},{"size":1355,"mtime":1685657235371,"results":"46","hashOfConfig":"26"},{"size":6111,"mtime":1685657235371,"results":"47","hashOfConfig":"26"},{"size":1372,"mtime":1685657235371,"results":"48","hashOfConfig":"26"},{"size":1090,"mtime":1685657235371,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"vj3s0n",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/peter/online-store-full-course/client/src/index.js",[],["104","105"],"/home/peter/online-store-full-course/client/src/App.js",["106"],"/home/peter/online-store-full-course/client/src/store/DeviceStore.js",[],"/home/peter/online-store-full-course/client/src/store/UserStore.js",[],"/home/peter/online-store-full-course/client/src/components/AppRouter.js",[],"/home/peter/online-store-full-course/client/src/components/NavBar.js",[],"/home/peter/online-store-full-course/client/src/http/userAPI.js",[],"/home/peter/online-store-full-course/client/src/routes.js",[],"/home/peter/online-store-full-course/client/src/http/index.js",[],"/home/peter/online-store-full-course/client/src/utils/consts.js",[],"/home/peter/online-store-full-course/client/src/pages/DevicePage.js",["107"],"/home/peter/online-store-full-course/client/src/pages/Auth.js",["108"],"/home/peter/online-store-full-course/client/src/pages/Shop.js",["109","110"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","/home/peter/online-store-full-course/client/src/pages/Basket.js",[],"/home/peter/online-store-full-course/client/src/pages/Admin.js",[],"/home/peter/online-store-full-course/client/src/http/deviceAPI.js",["111"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n","/home/peter/online-store-full-course/client/src/components/Pages.js",[],"/home/peter/online-store-full-course/client/src/components/DeviceList.js",[],"/home/peter/online-store-full-course/client/src/components/BrandBar.js",[],"/home/peter/online-store-full-course/client/src/components/TypeBar.js",["112"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","/home/peter/online-store-full-course/client/src/components/modals/CreateType.js",[],"/home/peter/online-store-full-course/client/src/components/modals/CreateDevice.js",["113","114"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","/home/peter/online-store-full-course/client/src/components/modals/CreateBrand.js",["115"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","/home/peter/online-store-full-course/client/src/components/DeviceItem.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":24,"column":8,"nodeType":"122","endLine":24,"endColumn":10,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"124","line":14,"column":8,"nodeType":"122","endLine":14,"endColumn":10,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":26,"column":17,"nodeType":"128","messageId":"129","endLine":26,"endColumn":21},{"ruleId":"120","severity":1,"message":"130","line":23,"column":8,"nodeType":"122","endLine":23,"endColumn":10,"suggestions":"131"},{"ruleId":"120","severity":1,"message":"130","line":30,"column":8,"nodeType":"122","endLine":30,"endColumn":65,"suggestions":"132"},{"ruleId":"126","severity":1,"message":"133","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":18},{"ruleId":"126","severity":1,"message":"134","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":11},{"ruleId":"126","severity":1,"message":"135","line":5,"column":36,"nodeType":"128","messageId":"129","endLine":5,"endColumn":48},{"ruleId":"120","severity":1,"message":"130","line":18,"column":8,"nodeType":"122","endLine":18,"endColumn":10,"suggestions":"136"},{"ruleId":"126","severity":1,"message":"137","line":4,"column":22,"nodeType":"128","messageId":"129","endLine":4,"endColumn":32},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["141"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["142"],["143"],"'jwt_decode' is defined but never used.","'Col' is defined but never used.","'fetchDevices' is defined but never used.",["144"],"'createType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"149","fix":"153"},"Update the dependencies array to be: [user]",{"range":"154","text":"155"},"Update the dependencies array to be: [id]",{"range":"156","text":"157"},"Update the dependencies array to be: [device]",{"range":"158","text":"159"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"160","text":"161"},{"range":"162","text":"159"},[747,749],"[user]",[482,484],"[id]",[875,877],"[device]",[1107,1164],"[device.page, device.selectedType, device.selectedBrand, device]",[747,749]]